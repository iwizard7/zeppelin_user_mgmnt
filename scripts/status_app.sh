#!/bin/bash

# üìä –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ Zeppelin User Management –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

echo "üìä –°—Ç–∞—Ç—É—Å Zeppelin User Management"
echo "=================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
APP_PIDS=$(ps aux | grep "app.py" | grep -v grep | awk '{print $2}')

if [ -z "$APP_PIDS" ]; then
    echo "üî¥ –°—Ç–∞—Ç—É—Å: –û–°–¢–ê–ù–û–í–õ–ï–ù–û"
    echo "‚ÑπÔ∏è  –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª PID
    if [ -f ".app_pid" ]; then
        OLD_PID=$(cat .app_pid)
        echo "‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω —Å—Ç–∞—Ä—ã–π PID —Ñ–∞–π–ª: $OLD_PID (–ø—Ä–æ—Ü–µ—Å—Å –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω)"
    fi
    
    echo ""
    echo "üí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ./start_app.sh"
    exit 0
fi

echo "üü¢ –°—Ç–∞—Ç—É—Å: –ó–ê–ü–£–©–ï–ù–û"
echo ""

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö
echo "üìã –ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã:"
for PID in $APP_PIDS; do
    echo "  üÜî PID: $PID"
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
    if command -v ps > /dev/null; then
        PS_INFO=$(ps -p $PID -o pid,ppid,etime,pcpu,pmem,command --no-headers 2>/dev/null)
        if [ ! -z "$PS_INFO" ]; then
            echo "     üìä $PS_INFO"
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç—ã (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω lsof)
    if command -v lsof > /dev/null; then
        PORTS=$(lsof -p $PID -i -P -n 2>/dev/null | grep LISTEN | awk '{print $9}' | cut -d: -f2 | sort -u)
        if [ ! -z "$PORTS" ]; then
            echo "     üåê –ü–æ—Ä—Ç—ã: $(echo $PORTS | tr '\n' ' ')"
        fi
    fi
    
    echo ""
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:"
if command -v curl > /dev/null; then
    if curl -s --connect-timeout 3 http://127.0.0.1:5003 > /dev/null; then
        echo "  ‚úÖ http://127.0.0.1:5003 - –î–û–°–¢–£–ü–ï–ù"
    else
        echo "  ‚ùå http://127.0.0.1:5003 - –ù–ï –î–û–°–¢–£–ü–ï–ù"
    fi
else
    echo "  ‚ÑπÔ∏è  curl –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Ä—É—á–Ω—É—é: http://127.0.0.1:5003"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
echo ""
echo "üìù –õ–æ–≥–∏:"
if [ -f "logs/app.log" ]; then
    LOG_SIZE=$(wc -l < logs/app.log 2>/dev/null || echo "0")
    echo "  üìÑ logs/app.log - $LOG_SIZE —Å—Ç—Ä–æ–∫"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏
    echo "  üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏:"
    tail -3 logs/app.log 2>/dev/null | sed 's/^/     /'
else
    echo "  ‚ö†Ô∏è  –û—Å–Ω–æ–≤–Ω–æ–π –ª–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

if [ -f "logs/app_startup.log" ]; then
    STARTUP_SIZE=$(wc -l < logs/app_startup.log 2>/dev/null || echo "0")
    echo "  üìÑ logs/app_startup.log - $STARTUP_SIZE —Å—Ç—Ä–æ–∫"
fi

echo ""
echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
echo "  üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: ./stop_app.sh"
echo "  üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å: ./stop_app.sh && ./start_app.sh"
echo "  üìù –õ–æ–≥–∏: tail -f logs/app.log"