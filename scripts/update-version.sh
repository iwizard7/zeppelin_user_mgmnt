#!/bin/bash

# üîÑ –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–µ—Ä—Å–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞...${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
if [ $# -eq 0 ]; then
    echo -e "${YELLOW}üìù –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <–Ω–æ–≤–∞—è_–≤–µ—Ä—Å–∏—è>${NC}"
    echo -e "${YELLOW}   –ü—Ä–∏–º–µ—Ä: $0 3.1.0${NC}"
    echo ""
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é
    if [ -f "VERSION" ]; then
        CURRENT_VERSION=$(cat VERSION)
        echo -e "${BLUE}üìã –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: ${CURRENT_VERSION}${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è –§–∞–π–ª VERSION –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    fi
    
    exit 1
fi

NEW_VERSION="$1"

# –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –≤–µ—Ä—Å–∏–∏ (semantic versioning)
if [[ ! "$NEW_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)?$ ]]; then
    echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–µ—Ä—Å–∏–∏!${NC}"
    echo -e "${YELLOW}üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: MAJOR.MINOR.PATCH (–Ω–∞–ø—Ä–∏–º–µ—Ä: 3.1.0)${NC}"
    exit 1
fi

# –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é
if [ -f "VERSION" ]; then
    CURRENT_VERSION=$(cat VERSION)
    echo -e "${BLUE}üìã –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: ${CURRENT_VERSION}${NC}"
else
    CURRENT_VERSION="unknown"
    echo -e "${YELLOW}‚ö†Ô∏è –§–∞–π–ª VERSION –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π${NC}"
fi

echo -e "${BLUE}üÜï –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è: ${NEW_VERSION}${NC}"

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
read -p "ü§î –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${YELLOW}‚ùå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ${NC}"
    exit 0
fi

echo -e "${BLUE}üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª—ã...${NC}"

# 1. –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª VERSION
echo "$NEW_VERSION" > VERSION
echo -e "${GREEN}‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω VERSION${NC}"

# 2. –û–±–Ω–æ–≤–ª—è–µ–º README.md
if [ -f "README.md" ]; then
    # –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Ä—Å–∏—é –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    sed -i.bak "s/### v[0-9]\+\.[0-9]\+\.[0-9]\+/### v${NEW_VERSION}/g" README.md 2>/dev/null || \
    sed -i '' "s/### v[0-9]\+\.[0-9]\+\.[0-9]\+/### v${NEW_VERSION}/g" README.md 2>/dev/null || \
    echo -e "${YELLOW}‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å README.md –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏${NC}"
    
    echo -e "${GREEN}‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω README.md${NC}"
fi

# 3. –û–±–Ω–æ–≤–ª—è–µ–º Readme.MD (–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
if [ -f "Readme.MD" ]; then
    sed -i.bak "s/### v[0-9]\+\.[0-9]\+\.[0-9]\+/### v${NEW_VERSION}/g" Readme.MD 2>/dev/null || \
    sed -i '' "s/### v[0-9]\+\.[0-9]\+\.[0-9]\+/### v${NEW_VERSION}/g" Readme.MD 2>/dev/null || \
    echo -e "${YELLOW}‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å Readme.MD –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏${NC}"
    
    echo -e "${GREEN}‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω Readme.MD${NC}"
fi

# 4. –û–±–Ω–æ–≤–ª—è–µ–º package.json (–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
if [ -f "package.json" ]; then
    sed -i.bak "s/\"version\": \"[^\"]*\"/\"version\": \"${NEW_VERSION}\"/g" package.json 2>/dev/null || \
    sed -i '' "s/\"version\": \"[^\"]*\"/\"version\": \"${NEW_VERSION}\"/g" package.json 2>/dev/null
    echo -e "${GREEN}‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω package.json${NC}"
fi

# 5. –û–±–Ω–æ–≤–ª—è–µ–º setup.py (–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
if [ -f "setup.py" ]; then
    sed -i.bak "s/version='[^']*'/version='${NEW_VERSION}'/g" setup.py 2>/dev/null || \
    sed -i '' "s/version='[^']*'/version='${NEW_VERSION}'/g" setup.py 2>/dev/null
    echo -e "${GREEN}‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω setup.py${NC}"
fi

# 6. –û–±–Ω–æ–≤–ª—è–µ–º Docker —Ñ–∞–π–ª—ã
if [ -f "Dockerfile" ]; then
    sed -i.bak "s/LABEL version=\"[^\"]*\"/LABEL version=\"${NEW_VERSION}\"/g" Dockerfile 2>/dev/null || \
    sed -i '' "s/LABEL version=\"[^\"]*\"/LABEL version=\"${NEW_VERSION}\"/g" Dockerfile 2>/dev/null || \
    echo -e "${YELLOW}‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω LABEL version –≤ Dockerfile${NC}"
fi

# –û—á–∏—â–∞–µ–º backup —Ñ–∞–π–ª—ã
rm -f *.bak 2>/dev/null || true

echo -e "${GREEN}üéâ –í–µ—Ä—Å–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!${NC}"
echo ""
echo -e "${BLUE}üìã –°–≤–æ–¥–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π:${NC}"
echo -e "${BLUE}   –°—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è: ${CURRENT_VERSION}${NC}"
echo -e "${BLUE}   –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è:  ${NEW_VERSION}${NC}"
echo ""

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ
echo -e "${YELLOW}üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:${NC}"
echo -e "${YELLOW}   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è: git diff${NC}"
echo -e "${YELLOW}   2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: ./scripts/start_app.sh${NC}"
echo -e "${YELLOW}   3. –°–¥–µ–ª–∞–π—Ç–µ –∫–æ–º–º–∏—Ç: git add . && git commit -m \"chore: bump version to ${NEW_VERSION}\"${NC}"
echo -e "${YELLOW}   4. –°–æ–∑–¥–∞–π—Ç–µ —Ç–µ–≥: git tag v${NEW_VERSION}${NC}"
echo -e "${YELLOW}   5. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ GitHub: git push && git push --tags${NC}"

# –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–º–∏—Ç
echo ""
read -p "ü§ñ –°–æ–∑–¥–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–º–∏—Ç —Å –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–µ–π? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    git add .
    git commit -m "chore: bump version to ${NEW_VERSION}

- –û–±–Ω–æ–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å–∏—è –≤ VERSION —Ñ–∞–π–ª–µ
- –û–±–Ω–æ–≤–ª–µ–Ω—ã —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–µ—Ä—Å–∏—é –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
- –í–µ—Ä—Å–∏—è —Ç–µ–ø–µ—Ä—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ UI

üìä –í–µ—Ä—Å–∏—è: ${CURRENT_VERSION} ‚Üí ${NEW_VERSION}"
    
    echo -e "${GREEN}‚úÖ –ö–æ–º–º–∏—Ç —Å–æ–∑–¥–∞–Ω!${NC}"
    
    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–µ–≥
    read -p "üè∑Ô∏è –°–æ–∑–¥–∞—Ç—å git —Ç–µ–≥ v${NEW_VERSION}? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        git tag -a "v${NEW_VERSION}" -m "Release v${NEW_VERSION}

üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:
- –û–±–Ω–æ–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å–∏—è –¥–æ ${NEW_VERSION}
- –í–µ—Ä—Å–∏—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ UI
- –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤–µ—Ä—Å–∏–π –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏

üìÖ –î–∞—Ç–∞ —Ä–µ–ª–∏–∑–∞: $(date +%Y-%m-%d)
üîó –í–µ—Ä—Å–∏—è: v${NEW_VERSION}"
        
        echo -e "${GREEN}‚úÖ –¢–µ–≥ v${NEW_VERSION} —Å–æ–∑–¥–∞–Ω!${NC}"
        
        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º push
        read -p "üöÄ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ —Ç–µ–≥ –≤ GitHub? (y/N): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            git push && git push --tags
            echo -e "${GREEN}üéâ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ GitHub!${NC}"
        fi
    fi
fi

echo -e "${GREEN}üèÅ –ì–æ—Ç–æ–≤–æ!${NC}"