#!/bin/bash

# ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–º–∏—Ç —Å —É–º–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
# –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ —Å–æ–∑–¥–∞–µ—Ç –æ—Å–º—ã—Å–ª–µ–Ω–Ω—ã–µ commit —Å–æ–æ–±—â–µ–Ω–∏—è

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π...${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
if [ -z "$(git status --porcelain)" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞${NC}"
    exit 0
fi

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
CHANGED_FILES=$(git status --porcelain | awk '{print $2}')
ADDED_FILES=$(git status --porcelain | grep "^A" | awk '{print $2}')
MODIFIED_FILES=$(git status --porcelain | grep "^M" | awk '{print $2}')
DELETED_FILES=$(git status --porcelain | grep "^D" | awk '{print $2}')

echo -e "${BLUE}üìÅ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã:${NC}"
echo "$CHANGED_FILES"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
get_commit_type() {
    local files="$1"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã —Ñ–∞–π–ª–æ–≤
    if echo "$files" | grep -q "\.github/workflows/"; then
        echo "ci"
    elif echo "$files" | grep -q "test"; then
        echo "test"
    elif echo "$files" | grep -q "\.md$"; then
        echo "docs"
    elif echo "$files" | grep -q "static/.*\.css\|static/.*\.js"; then
        echo "style"
    elif echo "$files" | grep -q "templates/"; then
        echo "feat"
    elif echo "$files" | grep -q "app\.py"; then
        echo "feat"
    elif echo "$files" | grep -q "requirements\.txt\|Dockerfile\|docker-compose"; then
        echo "build"
    elif echo "$files" | grep -q "\.gitignore\|\.env"; then
        echo "chore"
    else
        echo "update"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
get_commit_description() {
    local files="$1"
    local type="$2"
    
    case $type in
        "feat")
            if echo "$files" | grep -q "templates/login"; then
                echo "—É–ª—É—á—à–µ–Ω–∏—è —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞ –∏ UX"
            elif echo "$files" | grep -q "templates/dashboard"; then
                echo "—É–ª—É—á—à–µ–Ω–∏—è dashboard –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏"
            elif echo "$files" | grep -q "app\.py"; then
                echo "–Ω–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏ —É–ª—É—á—à–µ–Ω–∏—è backend"
            else
                echo "–Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏ —É–ª—É—á—à–µ–Ω–∏—è"
            fi
            ;;
        "style")
            if echo "$files" | grep -q "themes\.css"; then
                echo "–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π –∏ —Ç–µ–º"
            elif echo "$files" | grep -q "\.js"; then
                echo "—É–ª—É—á—à–µ–Ω–∏—è JavaScript –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"
            else
                echo "–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π –∏ UI"
            fi
            ;;
        "ci")
            echo "–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ CI/CD workflows –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏"
            ;;
        "test")
            echo "–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏ —É–ª—É—á—à–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤"
            ;;
        "docs")
            echo "–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏"
            ;;
        "build")
            echo "–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–±–æ—Ä–∫–∏ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
            ;;
        "chore")
            echo "—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
            ;;
        *)
            echo "–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞"
            ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è
get_detailed_description() {
    local files="$1"
    local details=""
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if echo "$files" | grep -q "favicon"; then
        details="${details}\n- –î–æ–±–∞–≤–ª–µ–Ω favicon –∏ —É–ª—É—á—à–µ–Ω –±—Ä–µ–Ω–¥–∏–Ω–≥"
    fi
    
    if echo "$files" | grep -q "toast\|Toast"; then
        details="${details}\n- –î–æ–±–∞–≤–ª–µ–Ω—ã toast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
    fi
    
    if echo "$files" | grep -q "theme"; then
        details="${details}\n- –£–ª—É—á—à–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —Ç–µ–º"
    fi
    
    if echo "$files" | grep -q "search\|Search"; then
        details="${details}\n- –£–ª—É—á—à–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏"
    fi
    
    if echo "$files" | grep -q "login"; then
        details="${details}\n- –£–ª—É—á—à–µ–Ω–∏—è —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞"
    fi
    
    if echo "$files" | grep -q "dashboard"; then
        details="${details}\n- –û–±–Ω–æ–≤–ª–µ–Ω–∏—è dashboard"
    fi
    
    if echo "$files" | grep -q "workflow"; then
        details="${details}\n- –û–±–Ω–æ–≤–ª–µ–Ω–∏—è GitHub Actions"
    fi
    
    if echo "$files" | grep -q "test"; then
        details="${details}\n- –û–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤"
    fi
    
    if echo "$files" | grep -q "\.md$"; then
        details="${details}\n- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏"
    fi
    
    echo -e "$details"
}

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∫–æ–º–º–∏—Ç–∞
COMMIT_TYPE=$(get_commit_type "$CHANGED_FILES")
COMMIT_DESCRIPTION=$(get_commit_description "$CHANGED_FILES" "$COMMIT_TYPE")
DETAILED_DESCRIPTION=$(get_detailed_description "$CHANGED_FILES")

# –°–æ–∑–¥–∞–µ–º commit —Å–æ–æ–±—â–µ–Ω–∏–µ
COMMIT_MESSAGE="${COMMIT_TYPE}: ${COMMIT_DESCRIPTION}"

# –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
if [ -n "$DETAILED_DESCRIPTION" ]; then
    COMMIT_MESSAGE="${COMMIT_MESSAGE}

${DETAILED_DESCRIPTION}"
fi

# –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–∞—Ö
FILE_COUNT=$(echo "$CHANGED_FILES" | wc -l)
COMMIT_MESSAGE="${COMMIT_MESSAGE}

üìÅ –ò–∑–º–µ–Ω–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${FILE_COUNT}"

echo -e "${GREEN}üìù –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ commit —Å–æ–æ–±—â–µ–Ω–∏–µ:${NC}"
echo -e "${YELLOW}${COMMIT_MESSAGE}${NC}"

# –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
read -p "ü§î –í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–º–∏—Ç —Å —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    git add .
    
    # –î–µ–ª–∞–µ–º –∫–æ–º–º–∏—Ç
    git commit -m "$COMMIT_MESSAGE"
    
    echo -e "${GREEN}‚úÖ –ö–æ–º–º–∏—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!${NC}"
    
    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º push
    read -p "üöÄ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ GitHub? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        git push
        echo -e "${GREEN}üéâ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ GitHub!${NC}"
    fi
else
    echo -e "${YELLOW}‚ùå –ö–æ–º–º–∏—Ç –æ—Ç–º–µ–Ω–µ–Ω${NC}"
fi