name: Pylint

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        pip install -r requirements.txt
    
    - name: Create pylint configuration for Flask project
      run: |
        cat > .pylintrc << EOF
        [MASTER]
        # Отключаем проверки, которые не критичны для Flask приложений
        disable=
            missing-module-docstring,
            missing-class-docstring,
            missing-function-docstring,
            too-few-public-methods,
            invalid-name,
            global-statement,
            broad-except,
            broad-exception-caught,
            unused-variable,
            import-outside-toplevel,
            too-many-locals,
            too-many-branches,
            too-many-statements,
            too-many-lines,
            too-many-return-statements,
            too-many-nested-blocks,
            line-too-long,
            trailing-whitespace,
            missing-final-newline,
            consider-using-f-string,
            logging-fstring-interpolation,
            subprocess-run-check,
            unspecified-encoding,
            no-else-return,
            inconsistent-return-statements,
            redefined-outer-name,
            wrong-import-order,
            pointless-string-statement,
            f-string-without-interpolation,
            bare-except
        
        [FORMAT]
        max-line-length=120
        
        [VARIABLES]
        good-names=i,j,k,ex,Run,_,e,f,fd,app,logger
        
        [DESIGN]
        max-args=15
        max-locals=25
        max-returns=15
        max-branches=30
        max-statements=100
        max-lines=2000
        EOF
    
    - name: Analysing the code with pylint
      run: |
        echo "Running Pylint analysis..."
        pylint app.py --exit-zero --score=yes
    
    - name: Generate pylint report
      run: |
        echo "## Pylint Analysis Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Score and Summary" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        pylint app.py --exit-zero --score=yes --reports=y --output-format=text | tail -20 >> $GITHUB_STEP_SUMMARY || true
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Analysis completed for Python ${{ matrix.python-version }}" >> $GITHUB_STEP_SUMMARY
      continue-on-error: true